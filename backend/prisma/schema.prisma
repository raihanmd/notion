// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  username String  @unique @db.VarChar(15)
  password String  @db.VarChar(255)
  image    String? @db.VarChar(255)

  notes Note[]

  @@map("users")
}

model Note {
  id           String    @id @default(uuid())
  user_id      String
  parent_id    String?   @db.VarChar(255)
  title        String    @db.VarChar(255)
  image        String?   @db.VarChar(255)
  icon         String?   @db.VarChar(255)
  is_published Boolean   @default(false)
  is_archived  Boolean   @default(false)
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @updatedAt @db.Timestamp(6)
  deleted_at   DateTime? @db.Timestamp(6)

  user        User    @relation(fields: [user_id], references: [id])
  parent_note Note?   @relation("ParentNote", fields: [parent_id], references: [id])
  child_note  Note[]  @relation("ParentNote")
  blocks      Block[]

  @@map("notes")
}

model Block {
  id         String    @id @default(uuid())
  note_id    String
  parent_id  String?   @db.VarChar(255)
  type       String    @db.VarChar(255)
  content    Json
  props      Json?
  position   Int       @default(0)
  version    Int       @default(1)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @updatedAt @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)

  note Note @relation(fields: [note_id], references: [id])

  @@map("blocks")
}
